# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting ^^
on: 
  pull_request:
    types: [closed]
    branches: [main, develop]

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  deploy: # PR 이 merge 되었을 때만 실행되도록 변경
    if: github.event.pull_request.merged == true 
    runs-on: ubuntu-latest
    steps:
      # 1. 소스코드 체크아웃
      - name: source chekout!
        uses: actions/checkout@v4
        
      # 2. Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      # 3. 프로젝트 의존성 설치
      - name: Install dependencies
        run: npm install

      # 4. 빌드 환경 설정
      - name: configure build environment
        id: configure-env # 다른 step에서 참조하기 위한 ID
        run: |
          if [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "environment=dev" >> $GITHUB_OUTPUT
            echo "FIREBASE_CHANNEL=dev" >> $GITHUB_OUTPUT
          else
            echo "environment=prod" >> $GITHUB_OUTPUT
            echo "FIREBASE_CHANNEL=live" >> $GITHUB_OUTPUT
          fi

      # 5. 프로젝트 빌드
      - name: Build
        env:
          # 환경변수 설정 (.env 파일 대체)
          VITE_API_URL: ${{ env.VITE_API_URL }}
          VITE_APP_ENV: ${{ steps.configure-env.outputs.environment }}
        run: npm run build -- --mode ${{ steps.configure-env.outputs.environment }}
      
      # 6. firebase 호스팅  
      - name: build_and_preview on FireBase ^^
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PWA_DEMO_E8C14 }}
          projectId: pwa-demo-e8c14
          channelId: "${{ steps.configure-env.outputs.FIREBASE_CHANNEL }}"
          entryPoint: "."



  # ========================== FireBase hosting 으로 전환하면서 필요없어짐 ==========================
  
  # 6. GitHub Pages 설정
  # - name: Setup Pages
  #   uses: actions/configure-pages@v
  
  # 7. 빌드 결과물을 아티팩트로 업로드  
  # - name: Upload artifact
  #   uses: actions/upload-pages-artifact@v3
  #   with:
  #     path: "./dist" # Vite 빌드 출력 디렉토
  
  # # 8. GitHub Pages에 배포
  # - name: Deploy to github pages ^^
  #   id: final_deployment
  #   uses: actions/deploy-pages@v4
  #   with:
  #     # develop 브랜치의 경우 미리보기 모드로 배포
  #     preview: ${{ github.ref != 'refs/heads/main' }}
